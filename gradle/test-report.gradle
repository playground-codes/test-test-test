import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

tasks.withType(Test) {
  testLogging {
    // set options for log level LIFECYCLE
    events TestLogEvent.PASSED,
            TestLogEvent.SKIPPED,
            TestLogEvent.FAILED,
            TestLogEvent.STANDARD_OUT
    showExceptions true
    exceptionFormat TestExceptionFormat.FULL
    showCauses true
    showStackTraces true

    // set options for log level DEBUG and INFO
    debug {
      events TestLogEvent.STARTED,
              TestLogEvent.PASSED,
              TestLogEvent.SKIPPED,
              TestLogEvent.FAILED,
              TestLogEvent.STANDARD_OUT,
              TestLogEvent.STANDARD_ERROR
      exceptionFormat TestExceptionFormat.FULL
    }
    info.events = debug.events
    info.exceptionFormat = debug.exceptionFormat

    afterSuite { desc, result ->
      if (!desc.parent) {
        // will match the outermost suite
        def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
        def startItem = '|  ', endItem = '  |'
        def repeatLength = startItem.length() + output.length() + endItem.length()
        println('\n' + ('-' * repeatLength) +
                '\n' +
                startItem +
                output +
                endItem +
                '\n' +
                ('-' * repeatLength))
      }
    }
  }
}